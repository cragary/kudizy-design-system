// stylelint-disable selector-no-qualifying-type

//
// Base styles
// 

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    //opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }

  i{
    font-size: $btn-icon-font-size;
    vertical-align: middle;
    &.left{
      margin-right: 0.25rem;
    }
  }
}

.btn-icon{
  width: $btn-icon-width;
  height:$btn-icon-width;
  border-color: none;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: $btn-icon-padding;
  border-radius: 50%;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include transition($btn-transition);
   
  i{
    font-size: $btn-icon-font-size;
    width: $btn-icon-font-size;
    height: $btn-icon-font-size;
  }
  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    //opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}



//
// Alternate buttons
//

@each $color, $value in $mudai-colors {
  .btn-filled-#{$color} {
    @include button-filled-variant($color, $value);
  }
}

@each $color, $value in $mudai-colors {
  .btn-outlined-#{$color} {
    @include button-outlined-variant($color, $value);
  }
}

@each $color, $value in $mudai-colors {
  .btn-transparent-#{$color} {
    @include button-transparent-variant($color,$value);
  }
}

@each $color, $value in $mudai-colors {
  .btn-icon-#{$color} {
    @include button-icon-variant($color,$value);
  }
}




//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-semi;
  font-size: $font-size-sm;
  color: $link-color;
  text-decoration: $link-decoration;
  cursor: pointer;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-icon-lg {
  width: 2rem;
  height: 2rem;

  i{
    font-size: 1.5rem;
    width: 2.3rem;
    height: 2.3rem;
  }
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  +.btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}